getwd()
############
## SETUP  ##
############
library(microdemic)
library(tidyverse)
library(stringr)
ID_match <- read_csv('data/Duplicates_Removed_with_ID.csv')
title_match <- read_csv('data/Duplicates_Removed_no_ID.csv')
# read in search output
refs <- read_csv('iteration_1_June_output/iteration_1_papers.csv')
refs
refs %>% filter(Pub_type == 1)
refs %>% filter(Pub_type == 1) -> refs
refs
# remove ID matches
refs_minus_duplicates <- refs %>% filter(!uid %in% ID_match$ID)
# remove ID matches
refs_minus_duplicates <- refs %>% filter(!uid %in% ID_match$ID)
# remove ID matches
refs_minus_duplicates <- refs %>% filter(!ID %in% ID_match$ID)
refs_minus_duplicates
# pull ID duplicates
ID_duplicates <- refs %>% filter(uid %in% ID_match$ID)
# pull ID duplicates
ID_duplicates <- refs %>% filter(ID %in% ID_match$ID)
ID_duplicates
# remove title matches
title_matches <- c()
for (title in title_match$Title){
title_matches <- c(title_matches, agrep(title, refs_minus_duplicates$title, max.distance = 0.2)[1])
}
warnings()
refs
for (title in title_match$Title){
title_matches <- c(title_matches, agrep(Title, refs_minus_duplicates$title, max.distance = 0.2)[1])
}
title_matches <- c(title_matches, agrep(title, refs_minus_duplicates$Title, max.distance = 0.2)[1])
for (title in title_match$Title){
title_matches <- c(title_matches, agrep(title, refs_minus_duplicates$Title, max.distance = 0.2)[1])
}
title_matches
title_matches %>% length
title_match %>% nrow
exclude <- title_matches[!is.na(title_matches)]
# pull title duplicates and check if they actually match
from_original <- title_match[!is.na(title_matches),]$Title
from_search <- refs_minus_duplicates[exclude,]$title
title_duplicates <- tibble(row_num = exclude, searched = from_search, original = from_original)
title_duplicates %>% print(n = nrow(title_duplicates))
title_matches
refs_minus_duplicates$Title %>% length
title_match$Title %>% length
# remove title matches
title_matches <- c()
for (title in title_match$Title){
title_matches <- c(title_matches, agrep(title, refs_minus_duplicates$Title, max.distance = 0.2)[1])
}
title_matches
title_matches %>% nrow
title_matches %>% length
exclude <- title_matches[!is.na(title_matches)]
exclude
exclude %>% length
# pull title duplicates and check if they actually match
from_original <- title_match[!is.na(title_matches),]$Title
from_search <- refs_minus_duplicates[exclude,]$title
title_duplicates <- tibble(row_num = exclude, searched = from_search, original = from_original)
title_duplicates %>% print(n = nrow(title_duplicates))
# pull title duplicates and check if they actually match
from_original <- title_match[!is.na(title_matches),]$Title
from_search <- refs_minus_duplicates[exclude,]$Title
title_duplicates <- tibble(row_num = exclude, searched = from_search, original = from_original)
title_duplicates %>% print(n = nrow(title_duplicates))
exclude
# enter in the row_num of any incorrect matches
incorrect_matches <- c(562, 1095, 1234, 87, 85, 13, 31) # enter here
# update list of title duplicates and exclude them
exclude <- exclude[-incorrect_matches]
exclude
refs
refs_minus_duplicates
refs_minus_duplicates <- refs_minus_duplicates[-exclude]
title_duplicates %>% print(n = nrow(title_duplicates))
